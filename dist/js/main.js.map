{"version":3,"sources":["main.js"],"names":["showNotification","message","type","notification","document","createElement","className","textContent","style","cssText","backgroundColor","color","body","appendChild","setTimeout","transform","removeChild","addEventListener","mobileMenuToggle","querySelector","mobileMenu","classList","remove","setAttribute","willOpen","contains","toggle","querySelectorAll","forEach","link","window","lottie","el","path","getAttribute","loadAnimation","container","renderer","loop","autoplay","rendererSettings","preserveAspectRatio","e","console","warn","faqQuestions","question","answer","this","nextElementSibling","isActive","q","add","preventDefault","targetId","substring","targetElement","getElementById","scrollIntoView","behavior","block","form","requiredFields","let","isValid","field","value","trim","log","reset","images","imageObserver","IntersectionObserver","entries","observer","entry","isIntersecting","img","target","src","dataset","unobserve","observe","scrollToTopBtn","innerHTML","pageYOffset","opacity","visibility","scrollTo","top","card"],"mappings":"AA+IA,SAAAA,iBAAAC,EAAAC,EAAA,QACA,IAAAC,EAAAC,SAAAC,cAAA,KAAA,EAoBA,OAnBAF,EAAAG,UAAA,6BAAAJ,EACAC,EAAAI,YAAAN,EAGAE,EAAAK,MAAAC;;;;;;;;;;;;IAeAP,GACA,IAAA,UACAC,EAAAK,MAAAE,gBAAA,UACA,MACA,IAAA,QACAP,EAAAK,MAAAE,gBAAA,UACA,MACA,IAAA,UACAP,EAAAK,MAAAE,gBAAA,UACAP,EAAAK,MAAAG,MAAA,OACA,MACA,QACAR,EAAAK,MAAAE,gBAAA,SACA,CAEAN,SAAAQ,KAAAC,YAAAV,CAAA,EAGAW,WAAA,KACAX,EAAAK,MAAAO,UAAA,eACA,EAAA,GAAA,EAGAD,WAAA,KACAX,EAAAK,MAAAO,UAAA,mBACAD,WAAA,KACAV,SAAAQ,KAAAI,YAAAb,CAAA,CACA,EAAA,GAAA,CACA,EAAA,GAAA,CACA,CA9LAC,SAAAa,iBAAA,mBAAA,WACA,IAAAC,EAAAd,SAAAe,cAAA,qBAAA,EACAC,EAAAhB,SAAAe,cAAA,cAAA,EAEAD,GAAAE,IAEAA,EAAAC,UAAAC,OAAA,QAAA,EACAlB,SAAAQ,KAAAS,UAAAC,OAAA,WAAA,EACAJ,EAAAK,aAAA,gBAAA,OAAA,EACAH,EAAAG,aAAA,cAAA,MAAA,EAEAL,EAAAD,iBAAA,QAAA,WACA,IAAAO,EAAA,CAAAJ,EAAAC,UAAAI,SAAA,QAAA,EACAP,EAAAG,UAAAK,OAAA,SAAAF,CAAA,EACAJ,EAAAC,UAAAK,OAAA,SAAAF,CAAA,EACApB,SAAAQ,KAAAS,UAAAK,OAAA,YAAAF,CAAA,EACAN,EAAAK,aAAA,gBAAAC,EAAA,OAAA,OAAA,EACAJ,EAAAG,aAAA,cAAAC,EAAA,QAAA,MAAA,CACA,CAAA,EAGApB,SAAAuB,iBAAA,kBAAA,EACAC,QAAAC,IACAA,EAAAZ,iBAAA,QAAA,WACAC,EAAAG,UAAAC,OAAA,QAAA,EACAF,EAAAC,UAAAC,OAAA,QAAA,EACAlB,SAAAQ,KAAAS,UAAAC,OAAA,WAAA,EACAJ,EAAAK,aAAA,gBAAA,OAAA,EACAH,EAAAG,aAAA,cAAA,MAAA,CACA,CAAA,CACA,CAAA,EAEA,CAAA,EAGAnB,SAAAa,iBAAA,mBAAA,WACAa,OAAAC,QAEA3B,SAAAuB,iBAAA,cAAA,EAAAC,QAAAI,IACA,IAAAC,EAAAD,EAAAE,aAAA,WAAA,EACA,GAAAD,EACA,IACAH,OAAAC,OAAAI,cAAA,CACAC,UAAAJ,EACAK,SAAA,MACAC,KAAA,CAAA,EACAC,SAAA,CAAA,EACAN,KAAAA,EACAO,iBAAA,CAAAC,oBAAA,eAAA,CACA,CAAA,CAGA,CAFA,MAAAC,GACAC,QAAAC,KAAA,sBAAAF,CAAA,CACA,CACA,CAAA,CAEA,CAAA,EAGAtC,SAAAa,iBAAA,mBAAA,WACA,IAAA4B,EAAAzC,SAAAuB,iBAAA,eAAA,EAEAkB,EAAAjB,QAAAkB,IACAA,EAAA7B,iBAAA,QAAA,WACA,IAAA8B,EAAAC,KAAAC,mBACAC,EAAAF,KAAA3B,UAAAI,SAAA,QAAA,EAGAoB,EAAAjB,QAAAuB,IACAA,EAAA9B,UAAAC,OAAA,QAAA,EACA6B,EAAAF,mBAAA5B,UAAAC,OAAA,QAAA,CACA,CAAA,EAGA4B,IACAF,KAAA3B,UAAA+B,IAAA,QAAA,EACAL,EAAA1B,UAAA+B,IAAA,QAAA,EAEA,CAAA,CACA,CAAA,CACA,CAAA,EAGAhD,SAAAa,iBAAA,mBAAA,WACAb,SAAAuB,iBAAA,cAAA,EAEAC,QAAAC,IACAA,EAAAZ,iBAAA,QAAA,SAAAyB,GACAA,EAAAW,eAAA,EAEAC,EAAAN,KAAAd,aAAA,MAAA,EAAAqB,UAAA,CAAA,EACAC,EAAApD,SAAAqD,eAAAH,CAAA,EAEAE,GACAA,EAAAE,eAAA,CACAC,SAAA,SACAC,MAAA,OACA,CAAA,CAEA,CAAA,CACA,CAAA,CACA,CAAA,EAGAxD,SAAAa,iBAAA,mBAAA,WACAb,SAAAuB,iBAAA,MAAA,EAEAC,QAAAiC,IACAA,EAAA5C,iBAAA,SAAA,SAAAyB,GACAA,EAAAW,eAAA,EAGAS,EAAAD,EAAAlC,iBAAA,YAAA,EACAoC,IAAAC,EAAA,CAAA,EAEAF,EAAAlC,QAAAqC,IACAA,EAAAC,MAAAC,KAAA,IACAH,EAAA,CAAA,EACAC,EAAA5C,UAAA+B,IAAA,OAAA,EAGAa,EAAAhD,iBAAA,QAAA,WACA+B,KAAA3B,UAAAC,OAAA,OAAA,CACA,CAAA,EAEA,CAAA,EAEA0C,GAEArB,QAAAyB,IAAA,gCAAA,EAEApE,iBAAA,yCAAA,SAAA,EACA6D,EAAAQ,MAAA,GAEArE,iBAAA,sCAAA,OAAA,CAEA,CAAA,CACA,CAAA,CACA,CAAA,EAwDAI,SAAAa,iBAAA,mBAAA,WACA,IAAAqD,EAAAlE,SAAAuB,iBAAA,eAAA,EAEA,IAAA4C,EAAA,IAAAC,qBAAA,CAAAC,EAAAC,KACAD,EAAA7C,QAAA+C,IACAA,EAAAC,kBACAC,EAAAF,EAAAG,QACAC,IAAAF,EAAAG,QAAAD,IACAF,EAAAxD,UAAAC,OAAA,MAAA,EACAiD,EAAAU,UAAAJ,CAAA,EAEA,CAAA,CACA,CAAA,EAEAP,EAAA1C,QAAAiD,GAAAN,EAAAW,QAAAL,CAAA,CAAA,CACA,CAAA,EAGAzE,SAAAa,iBAAA,mBAAA,WAEA,IAAAkE,EAAA/E,SAAAC,cAAA,QAAA,EACA8E,EAAAC,UAAA,IACAD,EAAA7E,UAAA,gBACA6E,EAAA3E,MAAAC;;;;;;;;;;;;;;;;;;IAoBAL,SAAAQ,KAAAC,YAAAsE,CAAA,EAGArD,OAAAb,iBAAA,SAAA,WACA,IAAAa,OAAAuD,aACAF,EAAA3E,MAAA8E,QAAA,IACAH,EAAA3E,MAAA+E,WAAA,YAEAJ,EAAA3E,MAAA8E,QAAA,IACAH,EAAA3E,MAAA+E,WAAA,SAEA,CAAA,EAGAJ,EAAAlE,iBAAA,QAAA,WACAa,OAAA0D,SAAA,CACAC,IAAA,EACA9B,SAAA,QACA,CAAA,CACA,CAAA,CACA,CAAA,EAGAvD,SAAAa,iBAAA,mBAAA,WACAb,SAAAuB,iBAAA,iDAAA,EAEAC,QAAA8D,IACAA,EAAAzE,iBAAA,aAAA,WACA+B,KAAAxC,MAAAO,UAAA,kBACA,CAAA,EAEA2E,EAAAzE,iBAAA,aAAA,WACA+B,KAAAxC,MAAAO,UAAA,eACA,CAAA,CACA,CAAA,CACA,CAAA","file":"main.js","sourcesContent":["// Main JavaScript file for Silva Financial Inc. website\n\n// Mobile menu functionality\ndocument.addEventListener('DOMContentLoaded', function() {\n  const mobileMenuToggle = document.querySelector('.mobile-menu-toggle');\n  const mobileMenu = document.querySelector('.mobile-menu');\n  \n  if (mobileMenuToggle && mobileMenu) {\n    // Ensure closed by default\n    mobileMenu.classList.remove('active');\n    document.body.classList.remove('menu-open');\n    mobileMenuToggle.setAttribute('aria-expanded', 'false');\n    mobileMenu.setAttribute('aria-hidden', 'true');\n\n    mobileMenuToggle.addEventListener('click', function() {\n      const willOpen = !mobileMenu.classList.contains('active');\n      mobileMenuToggle.classList.toggle('active', willOpen);\n      mobileMenu.classList.toggle('active', willOpen);\n      document.body.classList.toggle('menu-open', willOpen);\n      mobileMenuToggle.setAttribute('aria-expanded', willOpen ? 'true' : 'false');\n      mobileMenu.setAttribute('aria-hidden', willOpen ? 'false' : 'true');\n    });\n    \n    // Close mobile menu when clicking on a link\n    const mobileNavLinks = document.querySelectorAll('.mobile-nav-link');\n    mobileNavLinks.forEach(link => {\n      link.addEventListener('click', function() {\n        mobileMenuToggle.classList.remove('active');\n        mobileMenu.classList.remove('active');\n        document.body.classList.remove('menu-open');\n        mobileMenuToggle.setAttribute('aria-expanded', 'false');\n        mobileMenu.setAttribute('aria-hidden', 'true');\n      });\n    });\n  }\n});\n\n// Lottie animations initialization\ndocument.addEventListener('DOMContentLoaded', function() {\n  if (window.lottie) {\n    // Generic init for any .lottie-icon with data-path\n    document.querySelectorAll('.lottie-icon').forEach(el => {\n      const path = el.getAttribute('data-path');\n      if (!path) return;\n      try {\n        window.lottie.loadAnimation({\n          container: el,\n          renderer: 'svg',\n          loop: true,\n          autoplay: true,\n          path,\n          rendererSettings: { preserveAspectRatio: 'xMidYMid meet' }\n        });\n      } catch (e) {\n        console.warn('Lottie init failed:', e);\n      }\n    });\n  }\n});\n\n// FAQ accordion functionality\ndocument.addEventListener('DOMContentLoaded', function() {\n  const faqQuestions = document.querySelectorAll('.faq-question');\n  \n  faqQuestions.forEach(question => {\n    question.addEventListener('click', function() {\n      const answer = this.nextElementSibling;\n      const isActive = this.classList.contains('active');\n      \n      // Close all other FAQ items\n      faqQuestions.forEach(q => {\n        q.classList.remove('active');\n        q.nextElementSibling.classList.remove('active');\n      });\n      \n      // Toggle current FAQ item\n      if (!isActive) {\n        this.classList.add('active');\n        answer.classList.add('active');\n      }\n    });\n  });\n});\n\n// Smooth scrolling for anchor links\ndocument.addEventListener('DOMContentLoaded', function() {\n  const anchorLinks = document.querySelectorAll('a[href^=\"#\"]');\n  \n  anchorLinks.forEach(link => {\n    link.addEventListener('click', function(e) {\n      e.preventDefault();\n      \n      const targetId = this.getAttribute('href').substring(1);\n      const targetElement = document.getElementById(targetId);\n      \n      if (targetElement) {\n        targetElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start'\n        });\n      }\n    });\n  });\n});\n\n// Form validation\ndocument.addEventListener('DOMContentLoaded', function() {\n  const forms = document.querySelectorAll('form');\n  \n  forms.forEach(form => {\n    form.addEventListener('submit', function(e) {\n      e.preventDefault();\n      \n      // Basic form validation\n      const requiredFields = form.querySelectorAll('[required]');\n      let isValid = true;\n      \n      requiredFields.forEach(field => {\n        if (!field.value.trim()) {\n          isValid = false;\n          field.classList.add('error');\n          \n          // Remove error class after user starts typing\n          field.addEventListener('input', function() {\n            this.classList.remove('error');\n          });\n        }\n      });\n      \n      if (isValid) {\n        // Here you would typically send the form data to a server\n        console.log('Form is valid, ready to submit');\n        // For demo purposes, show success message\n        showNotification('Thank you! Your message has been sent.', 'success');\n        form.reset();\n      } else {\n        showNotification('Please fill in all required fields.', 'error');\n      }\n    });\n  });\n});\n\n// Notification system\nfunction showNotification(message, type = 'info') {\n  const notification = document.createElement('div');\n  notification.className = `notification notification-${type}`;\n  notification.textContent = message;\n  \n  // Add styles\n  notification.style.cssText = `\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    padding: 16px 24px;\n    border-radius: 8px;\n    color: white;\n    font-weight: 500;\n    z-index: 10000;\n    transform: translateX(100%);\n    transition: transform 0.3s ease;\n    max-width: 400px;\n  `;\n  \n  // Set background color based on type\n  switch (type) {\n    case 'success':\n      notification.style.backgroundColor = '#00A651';\n      break;\n    case 'error':\n      notification.style.backgroundColor = '#dc3545';\n      break;\n    case 'warning':\n      notification.style.backgroundColor = '#ffc107';\n      notification.style.color = '#000';\n      break;\n    default:\n      notification.style.backgroundColor = '#0077C5';\n  }\n  \n  document.body.appendChild(notification);\n  \n  // Animate in\n  setTimeout(() => {\n    notification.style.transform = 'translateX(0)';\n  }, 100);\n  \n  // Remove after 5 seconds\n  setTimeout(() => {\n    notification.style.transform = 'translateX(100%)';\n    setTimeout(() => {\n      document.body.removeChild(notification);\n    }, 300);\n  }, 5000);\n}\n\n// Lazy loading for images\ndocument.addEventListener('DOMContentLoaded', function() {\n  const images = document.querySelectorAll('img[data-src]');\n  \n  const imageObserver = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const img = entry.target;\n        img.src = img.dataset.src;\n        img.classList.remove('lazy');\n        imageObserver.unobserve(img);\n      }\n    });\n  });\n  \n  images.forEach(img => imageObserver.observe(img));\n});\n\n// Scroll to top functionality\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Create scroll to top button\n  const scrollToTopBtn = document.createElement('button');\n  scrollToTopBtn.innerHTML = '↑';\n  scrollToTopBtn.className = 'scroll-to-top';\n  scrollToTopBtn.style.cssText = `\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    background-color: #0077C5;\n    color: white;\n    border: none;\n    cursor: pointer;\n    font-size: 20px;\n    font-weight: bold;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    opacity: 0;\n    visibility: hidden;\n    transition: all 0.3s ease;\n    z-index: 1000;\n  `;\n  \n  document.body.appendChild(scrollToTopBtn);\n  \n  // Show/hide button based on scroll position\n  window.addEventListener('scroll', function() {\n    if (window.pageYOffset > 300) {\n      scrollToTopBtn.style.opacity = '1';\n      scrollToTopBtn.style.visibility = 'visible';\n    } else {\n      scrollToTopBtn.style.opacity = '0';\n      scrollToTopBtn.style.visibility = 'hidden';\n    }\n  });\n  \n  // Scroll to top when clicked\n  scrollToTopBtn.addEventListener('click', function() {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  });\n});\n\n// Add hover effects to cards\ndocument.addEventListener('DOMContentLoaded', function() {\n  const cards = document.querySelectorAll('.card, .service-card, .pricing-card, .blog-card');\n  \n  cards.forEach(card => {\n    card.addEventListener('mouseenter', function() {\n      this.style.transform = 'translateY(-4px)';\n    });\n    \n    card.addEventListener('mouseleave', function() {\n      this.style.transform = 'translateY(0)';\n    });\n  });\n});\n\n"]}